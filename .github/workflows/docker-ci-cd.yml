name: Docker CI/CD

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      skip_deploy:
        description: 'EC2 배포 단계 건너뛰기'
        required: false
        default: 'false'
        type: boolean

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESSKEY: test-access-key
      AWS_SECRETKEY: test-secret-key

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build project
      run: ./gradlew clean build -x test
      env:
        AWS_ACCESSKEY: test-access-key
        AWS_SECRETKEY: test-secret-key
        SPRING_PROFILES_ACTIVE: test

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-server .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/chat-server

  # 배포 작업을 별도 작업으로 분리
  deploy:
    if: github.event.inputs.skip_deploy != 'true'
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Install netcat
      run: sudo apt-get update && sudo apt-get install -y netcat-openbsd

    - name: Check EC2 Connection
      run: |
        # EC2 연결 테스트를 수행
        echo "EC2 호스트: ${{ secrets.EC2_HOST }}"
        echo "EC2 연결 테스트 중..."
        
        # 연결 테스트
        if nc -zv ${{ secrets.EC2_HOST }} 22 -w 10; then
          echo "✅ EC2 SSH 포트 접속 가능"
        else
          echo "❌ EC2 SSH 포트 접속 불가"
          # 문제 진단을 위해 traceroute 실행
          echo "Traceroute 실행..."
          sudo apt-get install -y traceroute
          traceroute -T -p 22 ${{ secrets.EC2_HOST }}
          
          # 배포를 계속 진행하되 실패할 가능성이 높다는 경고 표시
          echo "::warning::EC2 접속 테스트 실패, 배포가 실패할 수 있습니다."
        fi

    - name: Deploy to EC2
      continue-on-error: true
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        timeout: 180s
        command_timeout: 30m
        debug: true
        script: |
          echo "Docker 이미지 가져오는 중..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/chat-server
          echo "기존 컨테이너 정리 중..."
          docker stop chat-server || true
          docker rm chat-server || true
          echo "새 컨테이너 시작 중..."
          docker run -d --name chat-server -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e AWS_ACCESSKEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRETKEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e SPRING_DATA_MONGODB_URI=${{ secrets.MONGODB_URI }} \
            ${{ secrets.DOCKER_USERNAME }}/chat-server
          echo "배포 완료!"
          
    - name: Deployment Status
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ 배포 성공!"
        else
          echo "❌ 배포 실패: EC2 인스턴스에 연결할 수 없습니다. 다음을 확인하세요:"
          echo "1. EC2 인스턴스가 실행 중인지"
          echo "2. 보안 그룹에서 SSH 포트(22)가 GitHub Actions에 열려있는지"
          echo "3. GitHub Secrets의 EC2_HOST, EC2_USER, EC2_KEY가 올바른지"
          echo "4. EC2 인스턴스의 퍼블릭 IP가 변경되었는지 (탄력적 IP를 사용하지 않는 경우)"
          
          # 워크플로우는 성공으로 표시하고 경고만 출력
          echo "::warning::EC2 배포에 실패했지만 이미지는 성공적으로 Docker Hub에 업로드되었습니다."
        fi